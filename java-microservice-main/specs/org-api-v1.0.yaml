openapi: "3.0.0"
info:
  version: 1.0.0
  title: "Reading Comprehension"
  license:
    name: "MIT"
#servers:
#    - url: "http://localhost:8080"
#        description: "Local server"
paths:
  /documents:
    get:
      summary: "This operation allows to retrieve various documents"
      description: "This allows u user to get documents.  The list should always be returned in the same order, and by using the limit and offset query parameters, pagination can be achieved (with the added functionality of a total number of documents header indicating the total number of documents)"
      operationId: "getDocuments"
      parameters:
        - in: "query"
          name: "limit"
          description: "A limit on the max number of documents returned.  If the limit exceeds a certain maximum, then only a certain amount will be passed back and the x-maximum-limit header value will indicate this."
          schema:
            type: "integer"
          required: false
        - in: "query"
          name: "offset"
          description: "The offset used to retrieve documents.  This can be used with the limit query parameter to achieve pagination."
          schema:
            type: "integer"
          required: false
      tags:
        - "query"
        - "documents"
      responses:
        '200':
          description: "A list of documents, based on the limit and offset specified."
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/Document"
          headers:
            x-request-id:
              schema:
                type: "string"
                format: "uuid"
                example: "9184193d-756a-4edb-bec6-5dec79becc16"
                description: "A unique identifier (UUID) for this request generated by the server"
            x-trace-id:
              schema:
                type: "string"
                format: "uuid"
                example: "eadbc522-2ddb-4d6a-836c-6d89c4cc720e"
                description: "A trace id for this interaction with the system.  If none is sent in the request, then one will be generated and propagated to downstream requests (as well as returned here)."
            x-total-documents:
              schema:
                type: "integer"
                example: "4721"
                description: "The total number of documents stored"
        '400':
          description: "This means that there was an invalid limit or offset (or both)"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: "Unknown error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
    post:
      summary: "This operation allows to add an document for a given book"
      description: "This allows a teacher to create an document."
      operationId: "createDocument"
      requestBody:
        description: "The document to add"
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Document"
      tags:
        - "insert"
        - "documents"
      responses:
        '201':
          description: "The document was created successfully"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
          headers:
            x-request-id:
              schema:
                type: "string"
                format: "uuid"
                example: "9184193d-756a-4edb-bec6-5dec79becc16"
                description: "A unique identifier (UUID) for this request generated by the server"
            x-trace-id:
              schema:
                type: "string"
                format: "uuid"
                example: "eadbc522-2ddb-4d6a-836c-6d89c4cc720e"
                description: "A trace id for this interaction with the system.  If none is sent in the request, then one will be generated and propagated to downstream requests (as well as returned here)."
        '400':
          description: "This means that there was an invalid document passed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '409':
          description: "This means that the user was attempting to create an document for an isbn that already has an isbn registered"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: "Unknown error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /documents/{isbn}:
    get:
      summary: "This operation allows to retrieve an document by isbn"
      description: "This allows a user to retrieve an document for a specific isbn"
      operationId: "getDocumentByIsbn"
      parameters:
        - in: "path"
          name: "isbn"
          description: "The particular isbn to search on"
          schema:
            type: "integer"
            format: "int64"
          required: true
      tags:
        - "query"
        - "documents"
      responses:
        '200':
          description: "The document with the given isbn"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Document"
          headers:
            x-request-id:
              schema:
                type: "string"
                format: "uuid"
                example: "9184193d-756a-4edb-bec6-5dec79becc16"
                description: "A unique identifier (UUID) for this request generated by the server"
            x-trace-id:
              schema:
                type: "string"
                format: "uuid"
                example: "eadbc522-2ddb-4d6a-836c-6d89c4cc720e"
                description: "A trace id for this interaction with the system.  If none is sent in the request, then one will be generated and propagated to downstream requests (as well as returned here)."
            x-total-documents:
              schema:
                type: "integer"
                example: "4721"
                description: "The total number of documents stored"
        '400':
          description: "This means that the isbn passed was invalid"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: "This means that no document exists for the isbn passed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: "Unknown error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /errors/{errorId}:
    get:
      summary: "This operation allows to retrieve more information about an error based on the (unique) error id"
      operationId: "getErrorById"
      parameters:
        - in: "path"
          name: "errorId"
          description: "The particular errorId to search on"
          schema:
            type: "integer"
            format: "int32"
          required: true
      tags:
        - "query"
        - "errors"
      responses:
        '200':
          description: "The detailed error info with the given id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetailedErrorInfo"
          headers:
            x-request-id:
              schema:
                type: "string"
                format: "uuid"
                example: "9184193d-756a-4edb-bec6-5dec79becc16"
                description: "A unique identifier (UUID) for this request generated by the server"
            x-trace-id:
              schema:
                type: "string"
                format: "uuid"
                example: "eadbc522-2ddb-4d6a-836c-6d89c4cc720e"
                description: "A trace id for this interaction with the system.  If none is sent in the request, then one will be generated and propagated to downstream requests (as well as returned here)."
        '400':
          description: "This means that the error id passed was invalid"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        '404':
          description: "This means that no document exists for the error id passed"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        default:
          description: "Unknown error"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"



components:
  schemas:
    ErrorResponse:
      description: "Response for any error encountered by the application"
      required:
        - "errorReasons"
        - "timestamp"
      properties:
        errorReasons:
          type: "array"
          items:
            $ref: "#/components/schemas/ErrorReason"
          nullable: false
          description: "A list of reasons why the request failed.  This may have only one error reason, or it could be multiple (in the case the client submits bad data)"
        timestamp:
          type: "string"
          nullable: false
          description: "The timestamp of when the error occurred, generated on the server-side"
          format: "date-time"
    Document:
      description: "An document for a single book (where a book is determined by an isbn).  An document can have one or more questions associated with it"
      required:
        - isbn
        - size
        - title
        - authorFirstName
        - authorLastName
      properties:
        isbn:
          #isbn cannot start with leading 0
          type: "integer"
          format: "int64"
          nullable: false
          description: "The isbn (10) for the document"
          example: "9780553213119"
        size:
          type: "number"
          format: "float"
          nullable: false
          description: "The size of this document.  Generally speaking, the higher the size, the longer/harder the document is to read."
          example: "15.2"
        title:
          type: "string"
          nullable: false
          description: "The title of the book."
          example: "Moby Dick"
        authorFirstName:
          type: "string"
          nullable: false
          description: "The first name of the author of the book"
          example: "Herman"
        authorLastName:
          type: "string"
          nullable: false
          description: "The last name of the author of the book"
          example: "Melleville"
    ErrorReason:
      description: "An error reason is a single, unique reason for an error.  Please note that in the case of multiple errors (usually with user input), there can be multiple error reasons returned
      In the future, there will be an endpoint given to list these errors, and to get more information on a specific error"
      required:
        - errorId
        - explanation
      properties:
        errorId:
          type: "integer"
          format: "int32"
          nullable: false
          description: "A unique id for an error reason.  This can be used in a get request to find more information"
          example: "34"
        explanation:
          type: "string"
          nullable: false
          description: "A brief explanation of the error.  Please note that this may change, and the errorId should be used to determine information"
          example: "Isbn must be greater than zero.  The value passed was -1322"
    DetailedErrorInfo:
      description: "This provides additional information about an error that occurred.  Please note that this gives one example of what could be causing the issue (and your exact request may be slightly different).  However, this can be used to get more information about a failure"
      required:
        - errorId
        - exampleUrl
        - exampleRequestMethod
        - exampleRequestBody
        - exampleCorrectUrl
        - exampleCorrectRequestBody
        - errorReason
      properties:
        errorId:
          type: "integer"
          format: "int32"
          nullable: false
          example: "21"
        exampleUrl:
          type: "string"
          nullable: false
          example: "http://localhost:8080/documents"
          description: "This is an example example url, that may be incorrect.  Compare with the example correct url below"
        exampleRequestBody:
          type: "string"
          description: "This is an example of an incorrect "
          nullable: true
          example: '{}'
        exampleRequestMethod:
          type: "string"
          description: "The http method"
          example: "POST"
        exampleCorrectUrl:
          type: "string"
          nullable: false
        exampleCorrectRequestBody:
          type: "string"
          nullable: true
          example: '{isbn: 12}'
        errorReason:
          $ref: '#/components/schemas/ErrorReason'
